<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 找個地方復健作文能力</title>
    <link>https://lynii12.github.io/posts/</link>
    <description>Recent content in Posts on 找個地方復健作文能力</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 05 Feb 2022 15:26:15 +0800</lastBuildDate><atom:link href="https://lynii12.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Functional Programming 筆記</title>
      <link>https://lynii12.github.io/posts/functional-programming/</link>
      <pubDate>Sat, 05 Feb 2022 15:26:15 +0800</pubDate>
      
      <guid>https://lynii12.github.io/posts/functional-programming/</guid>
      <description>重要的概念  function 是 first class，可作為參數，也可當作output immutable curry function -&amp;gt; 將multiple arity function 拆作unary function, curry 將參數變得有序，參數的優先順序會影響function 的實用程度，most specific -&amp;gt; least specific，least specific 通常像是 data pure function -&amp;gt; no side effect point free programming composition, library like lamda or lodash associative property -&amp;gt; 1 + (2 + 3) or (1 + 2) + 3 debug in composition  常見 side effect  outside the world like console.log same input, different outputs global state like use constants in the function mutable, mutate the state in the application  </description>
    </item>
    
    <item>
      <title>多個網址參數儲存方式</title>
      <link>https://lynii12.github.io/posts/multiple-url-parameter/</link>
      <pubDate>Wed, 26 Jan 2022 09:09:00 +0800</pubDate>
      
      <guid>https://lynii12.github.io/posts/multiple-url-parameter/</guid>
      <description>搜尋參數儲存複雜的資料格式
 用URLSearchParams API 儲存陣列  // get url const searchParams = new URLSearchParams(&amp;#39;?name=1&amp;amp;name=2&amp;amp;name=3&amp;#39;) searchParams.getAll(&amp;#39;name&amp;#39;) // [&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;4&amp;#39;]  // set url const names = [&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;4&amp;#39;] const searchParams = new URLSearchParams(names.map(name =&amp;gt; [&amp;#39;name&amp;#39;, name])) searchParams.toString() // name=1&amp;amp;name=2&amp;amp;name=3&amp;amp;name=4  用 encodeURIComponent 加上 decodeURIComponent 的組合將字串編碼  // 拿 fb 的網址作測試 // get url const searchParams = &amp;#39;name%2Cdelivery%2Ccampaign_name%2Cbid%2Cbudget%2Cactions%3Alink_click&amp;#39; decodeURIComponent(searchParams) // &amp;#39;name,delivery,campaign_name,bid,budget,actions:link_click&amp;#39;  // set url const data = &amp;#39;name,delivery,campaign_name,bid,budget,actions:link_click&amp;#39; encodeURIComponent(data) // name%2Cdelivery%2Ccampaign_name%2Cbid%2Cbudget%2Cactions%3Alink_click  附註：encodeURI 和 encodeURIComponent 的差異是後者還會對保留字元(:、/、;、?</description>
    </item>
    
    <item>
      <title>next 設定公版頁</title>
      <link>https://lynii12.github.io/posts/next-layout/</link>
      <pubDate>Sat, 28 Aug 2021 10:41:58 +0800</pubDate>
      
      <guid>https://lynii12.github.io/posts/next-layout/</guid>
      <description>next 是hydration ssr 的框架，導轉頁面時會重新做hydration，當不同頁面有共同元件，不想要導轉時重新render 時，可以運用next 定義_app.js 的設定公版頁
舉例專案現在有兩個頁面，一個 a 頁面，一個 b 頁面
cd next-project touch /page/a.js touch /page/b.js const APage = () =&amp;gt; { return &amp;lt;div&amp;gt;&amp;lt;Nav /&amp;gt;A&amp;lt;/div&amp;gt; } const BPage = () =&amp;gt; { return &amp;lt;div&amp;gt;&amp;lt;Nav /&amp;gt;B&amp;lt;/div&amp;gt; } 兩個頁面都需要顯示 Nav ，透過連結跳轉頁面時會發現Nav 都會閃一下重新載入，這和想像中的行為不同，預期希望只異動頁面內容(顯示 A 或是 B)
這種情形可以用 next 提供的 _app.js ，可以透過這個檔案作全域的設定，像是匯入全域的css 檔案，store provider 等，而公版頁也可以在這裡設定，像是
// 移除Nav 元件 const APage = () =&amp;gt; { return &amp;lt;div&amp;gt;A&amp;lt;/div&amp;gt; } // 移除Nav 元件 const BPage = () =&amp;gt; { return &amp;lt;div&amp;gt;B&amp;lt;/div&amp;gt; } export default function MyApp(props) { return ( &amp;lt;div&amp;gt; &amp;lt;Nav /&amp;gt; &amp;lt;Component {.</description>
    </item>
    
    <item>
      <title>my first post</title>
      <link>https://lynii12.github.io/posts/my-first-post/</link>
      <pubDate>Thu, 26 Aug 2021 23:50:10 +0800</pubDate>
      
      <guid>https://lynii12.github.io/posts/my-first-post/</guid>
      <description>第一篇文章 ✊
使用 hugo 建制自己的部落格，目的是希望養成書寫的習慣，順便能紀錄遇到的問題或工具
套用的模版是 Hugo PaperMod
snippet 新增文章 hugo new --kind post content/posts/&amp;lt;name&amp;gt; code highlight
console.log(&amp;#39;hello internet!&amp;#39;); 本機開發 hugo server -D </description>
    </item>
    
  </channel>
</rss>
